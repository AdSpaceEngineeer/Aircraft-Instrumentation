import math as m

#custom function to get P, T, rho from altitude
def get_PTrho_given_altitude(h,g0,R,P_sl,rho_sl,F_to_R,a,T_sl,T_trop,P_trop,rho_trop):
    if h < 36000 :
        T1 = T_sl + F_to_R                     # CHECKED deg Rankine, Temperature at sea level
        T = T1 + a*h                         # deg Rankine, Temperature at h
        P = P_sl * ( T / T1 )**(-1*g0/(R*a))              # pounds per square feet, Pressure at h
        rho = rho_sl * ( T / T1 )**(-1*(g0/(R*a) + 1))    # slug per cubic fe   et, Density at h
    
    elif h >= 36000 and h < 82000 :          # isotherml region of stratosphere
        h0 = 36000                           # feet, altitude at tropopause
        T = T_trop + F_to_R                   # deg Rankine, Temperature at 36000 feet
        P = P_trop * m.e**(-1*g0*(h - h0)/(R*T))        # pounds per square feet, Pressure at h
        rho = rho_trop * m.e**(-1*g0*(h - h0)/(R*T))    # slug per feet cube, Density at h
    
    return [P, T - F_to_R, rho]     #return Pressure in lb/ft2, Temperature in degF and Density in slugs/ft3

#given parameters and constants

rho_sl = 2.3769e-3          # slugs per cubic feet, density at sea level
P_sl = 2116.22              # pounds per square feet, pressure at sea level
hG = 42000                  # feet, geometric altitude
Vcal = 590                  # knots, Calibrated Speed
gamma = 1.4                 # dimensionless, specific heat ratio

knot_to_ftpersec = 1.68781  # 1 knot = 1.68781 feet per sec
psi_to_psf = 144            # 1 psi = 144 psf

#compute speed of sound at sea level
a0 = (gamma*P_sl/(rho_sl))**0.5  # feet per seconds, speed of sound at sea level
print("Speed of sound at sea level / ft.s-1: ", a0)

#compute dynamic pressure 'p_total minus p_static'
term1 = (Vcal*knot_to_ftpersec)**2 * (gamma-1)/(2*a0**2) + 1
term2 = term1**(gamma/(gamma-1)) - 1
P_dyn = term2*P_sl  #pounds per square feet, dynamic pressure at 42000 feet, 590 knots Vcal
print("Ptot - P_stat / psf :", P_dyn)

g0 = 32.174         # feet per square seconds, std grav acceleration
R = 1716.5          # feet square per second square per deg Rankine, specific gas constant of air
F_to_R = 459.67     # to convert deg Fahrenheit to deg Rankine, R = F + 459.67
a = -0.00357        # deg Rankine per feet, environmental lapse rate
T_sl = 59           # deg Fahrenheit, Temperature at sea level
T_trop = -70.68     # deg Fahrenheit, Temperature at 36000 feet
P_trop = 474.59       # pounds per square feet, pressure at 36000 feet
rho_trop = 7.0864e-4  # slugs per cubic feet, density at 36000 feet

# get static pressure at given altitude
P_stat = get_PTrho_given_altitude(hG,g0,R,P_sl,rho_sl,F_to_R,a,T_sl,T_trop,P_trop,rho_trop)[0]
print("P_stat / psf :", P_stat)

# get dry air density at given altitude
rho_h = get_PTrho_given_altitude(hG,g0,R,P_sl,rho_sl,F_to_R,a,T_sl,T_trop,P_trop,rho_trop)[2]
print("Density of air at 42000 feet / slug.ft-3: ", rho_h)

#compute speed of sound at given altitude
a1 = (gamma*P_stat/(rho_h))**0.5  # feet per seconds, speed of sound at 42K altitude
print("Speed of sound at 42000 feet / ft.s-1: ", a1)

#compute True Airspeed given pressures and speed of sound at given altitude
term3 = ( (P_dyn/P_stat) + 1)**((gamma-1)/gamma) - 1
term4 = 2*a1**2/(gamma-1)
Vtrue = (term4*term3)**0.5
print("Vtrue / ft.s-1 : ", Vtrue)
print("Absolute difference between Vtrue and Vcal / knots :", Vtrue/knot_to_ftpersec - Vcal)


